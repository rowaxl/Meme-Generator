{"version":3,"sources":["theme.js","components/Layout.jsx","components/MemeForm.jsx","components/MemeViewer.jsx","api/imageHook.js","pages/App.js","pages/NotFound.js","index.js"],"names":["createMuiTheme","palette","type","useStyles","makeStyles","theme","container","height","padding","background","default","Layout","children","styles","Container","maxWidth","className","root","width","margin","display","flexDirection","justifyContent","field","MemeForm","onSubmit","useState","firstText","setFirstText","lastText","setLastText","fontSize","setFontSize","error","setError","e","preventDefault","TextField","label","onChange","value","target","placeholder","helperText","length","Button","color","variant","wrap","position","image","topText","top","textAlign","fontWeight","textShadow","bottomText","bottom","MemeViewer","console","log","src","url","alt","Typography","style","Axios","axios","create","baseURL","headers","App","selectedImage","setSelectedImage","loading","setLoading","results","setResults","getImages","a","get","catch","err","res","data","memes","useEffect","useGetImage","CircularProgress","size","align","Link","href","rel","index","Math","floor","random","NotFound","to","component","ReactDOM","render","StrictMode","StylesProvider","ThemeProvider","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.7b566cc5.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\nimport 'fontsource-roboto'\n\nexport default createMuiTheme({\n  palette: {\n    type: 'dark'\n  }\n})","import React from 'react'\nimport {\n  Container,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: '100vh',\n    padding: '50px 0',\n    background: theme.palette.background.default\n  }\n}))\n\nconst Layout = ({ children }) => {\n  const styles = useStyles()\n\n  return (\n    <Container maxWidth={false} className={styles.container}>\n      {children}\n    </Container>\n  )\n}\n\nexport default Layout","import React, { useState } from 'react'\nimport {\n  TextField,\n  Button,\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 600,\n    width: '100%',\n    height: 300,\n    margin: 'auto',\n    display: 'flex',\n    flexDirection: 'column',\n    padding: '0 50px 0 50px',\n    justifyContent: 'space-evenly'\n  },\n  field: {\n    width: 'calc(max(300, 100%))',\n  }\n}))\n\nconst MemeForm = ({ onSubmit }) => {\n  const styles = useStyles()\n  const [firstText, setFirstText] = useState('')\n  const [lastText, setLastText] = useState('')\n  const [fontSize, setFontSize] = useState(20)\n  const [error, setError] = useState('')\n\n  const handleChangeFirstText = (e) => {\n    const value = e.target.value\n    setFirstText(value)\n  }\n\n  const handleChangeLastText = (e) => {\n    const value = e.target.value\n    setLastText(value)\n  }\n\n  const handleChangeFontSize = (e) => {\n    const value = e.target.value\n\n    if (value < 10 || value > 100) {\n      setError('Please input valid font size. (between 10 and 100)')\n      return\n    }\n\n    setError('')\n    setFontSize(value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    onSubmit({ firstText, lastText, fontSize })\n  }\n\n  return (\n    <form className={styles.root} onSubmit={handleSubmit}>\n      <TextField \n        className={styles.field}\n        label=\"First text\"\n        onChange={handleChangeFirstText}\n      />\n\n      <TextField\n        className={styles.field}\n        label=\"Last text\"\n        onChange={handleChangeLastText}\n      />\n\n      <TextField\n        className={styles.field}\n        type=\"number\"\n        label=\"Font size\"\n        placeholder=\"select between 10 to 100px (default: 20)\"\n        onChange={handleChangeFontSize}\n        helperText={error}\n        error={error.length > 0}\n      />\n\n      <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n        Generate!\n      </Button>\n    </form>\n  )\n}\n\nexport default MemeForm\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(() => ({\n  wrap: {\n    width: '100%',\n    height: 'calc(100vh - 100px - 300px - 90px)',\n    padding: '0 50px',\n    display: 'flex',\n    justifyContent: 'center',\n    position: 'relative'\n  },\n  image: {\n    width: 'auto',\n    height: '100%',\n  },\n  topText: { \n    position: 'absolute',\n    width: '100%',\n    top: 0,\n    textAlign: 'center',\n    color: '#fff',\n    fontWeight: 900,\n    textShadow: '#000 0 0 5px'\n  },\n  bottomText: {\n    position: 'absolute',\n    width: '100%',\n    bottom: 0,\n    textAlign: 'center',\n    color: '#fff',\n    fontWeight: 900,\n    textShadow: '#000 0 0 5px'\n  }\n}))\n\nconst MemeViewer = ({ image, firstText, lastText, fontSize }) => {\n  const styles = useStyles()\n\n  console.log(image)\n\n  return (\n    <>\n      { !image\n        ? <></>\n        : (\n          <div className={styles.wrap}>\n            <img className={styles.image} src={image.url} alt=\"generated-meme\" />\n            <Typography className={styles.topText} style={{ fontSize: `${fontSize}px` }}>\n              {firstText}\n            </Typography>\n\n            <Typography className={styles.bottomText} style={{ fontSize: `${fontSize}px` }}>\n              {lastText}\n            </Typography>\n          </div>\n        )\n      }\n    </>\n  )\n}\n\nexport default MemeViewer","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst Axios = axios.create({\n  baseURL: 'https://api.imgflip.com',\n  headers: {\n    'Content-type': 'application/json'\n  }\n});\n\nexport const useGetImage = () => {\n  const [loading, setLoading] = useState(true)\n  const [results, setResults] = useState([])\n\n  const getImages = async () => {\n    setLoading(true)\n    const res = await Axios.get('/get_memes').catch(err => console.error(err))\n\n    setResults(res ? res.data.data.memes : [])\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    getImages()\n  }, [])\n\n  return [loading, results]\n}","import React, { useState } from 'react'\nimport {\n  Typography,\n  CircularProgress,\n  Link,\n} from '@material-ui/core'\n\nimport Layout from '../components/Layout'\nimport MemeForm from '../components/MemeForm'\nimport MemeViewer from '../components/MemeViewer'\n\nimport { useGetImage } from '../api/imageHook'\n\nconst App = () => {\n  const [firstText, setFirstText] = useState('')\n  const [lastText, setLastText] = useState('')\n  const [fontSize, setFontSize] = useState(20)\n  const [selectedImage, setSelectedImage] = useState(null)\n  const [loading, results] = useGetImage()\n\n  const generateMeme = ({ firstText, lastText, fontSize }) => {\n    setFirstText(firstText)\n    setLastText(lastText)\n    setFontSize(fontSize)\n\n    if (results.length > 0) {\n      const index = Math.floor(Math.random() * results.length)\n\n      setSelectedImage(results[index])\n    }\n  }\n\n  return (\n    <Layout>\n      { loading\n        ? <CircularProgress size=\"large\" />\n        : (<>\n            <Typography variant=\"h3\" align=\"center\" color=\"textPrimary\">\n              Meme Generator\n            </Typography>\n\n            <Typography variant=\"h6\" align=\"center\" color=\"textPrimary\">\n              Powered by <Link href=\"https://imgflip.com/\" target=\"_blank\" rel=\"noreferrer\" color=\"primary\">Imgflip</Link>\n            </Typography>\n\n            <MemeForm onSubmit={generateMeme} />\n\n            <MemeViewer\n              image={selectedImage}\n              firstText={firstText}\n              lastText={lastText}\n              fontSize={fontSize}\n            />\n          </>\n        )\n      }\n    </Layout>\n  )\n}\n\nexport default App","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from '@material-ui/core'\nimport Layout from '../components/Layout'\n\nconst NotFound = () => {\n  return (\n    <Layout>\n      <h2>\n        Page not found\n      </h2>\n\n      <Link to=\"/\" component={Button}>\n        Return\n      </Link>\n    </Layout>\n  )\n}\n\nexport default NotFound","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\nimport { StylesProvider } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/core'\nimport theme from './theme'\n\nimport App from './pages/App';\nimport NotFound from './pages/NotFound'\n\nimport './styles/global.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StylesProvider>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/404\" component={NotFound} />\n            <Route component={App} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </StylesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}